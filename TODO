1. (done!)make clean bevy 0.8 project
2. (done!)update bevy_fly_camera to 0.8
3. (done!)update bevy_text_mesh to 0.8
2. (done!)draw file content as 3d mesh
2.1. (done!)support mono font
2.2. (done!)support tabs
2.3. (fixed!)bug: spacing is broken
2.4. (fixed!)bug: long lines overlap
3. color highlight
3.1. (prototype done with lsp!)try to hook up rust-analyzer
3.2. (done!)try to hook up rustc_ast and parser
3.3. (done!)use rustc parser to do syntax highlighting
3.4. (done!)draw words separately for highlighting
3.5. optionally draw letters separately?
3.6. bug: indentation is broken after words became separate
4. (done!)better camera init position
5. try smooth camera
6. (done!)add infinite grid
7. (done!)better init camera position
8. (done!)make slimmer origin axis
9. camera: fit view to code
10. line numbers
11. scrolling by moving camera with snapping
12. calculate line offsets properly
13. (done!)toggle hide mouse cursor on esc
14. (done!)exit app on ctrl+esc
15. unhide mouse by timeout (after inactivity in movement department)
16. hide mouse by gesture?
17. (done!)highlightable/pickable lines
18. pass material instead of font color to bevy_text_mesh
19. spawn a background object/plane for code
20. lines/words/letters need a background object for picking if we're going for that
21. load fonts on startup or something

oof
1. detect patterns in code editing and ask if repeat. (i was deleting Default:: a lot)
2. text wrapping is a good opportunity to flex 3d
3. filtered view with only certain stuff rendered
4. ngon with a file on each face
5. project visualization with nodes etc
6. callstack visualization with links between files
7. for rust show if main.rs and or cargo.toml missing via "empty" files with needed filenames
8. show errors with lamps/whatever effects.
9. mods will be epic. a corridor with each file as a door. flying spaceship with files/planets.